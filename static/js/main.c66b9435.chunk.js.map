{"version":3,"sources":["redux/contacts/contacts-actions.js","components/Phonebook/Phonebook.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","Phonebook","state","contactCreateList","nameToCheck","toLowerCase","props","contactBase","isExist","map","alert","contactAdd","event","preventDefault","resetForm","handleInputChange","e","currentTarget","value","setState","nameInputId","phoneInputId","onSubmit","this","htmlFor","type","pattern","title","required","onChange","Component","connect","contact","contacts","dispatch","contactActions","getVisibleContacts","contacList","filter","normalizedFilter","includes","onClick","App","Fragment","createReducer","actions","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c66b9435.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst ADD = 'contacts/add';\r\nconst DELETE = 'contacts/delete';\r\nconst CHANGE_FILTER = 'contacts/filter';\r\n\r\nconst addContact = createAction(ADD, (name, number) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(DELETE);\r\n\r\nconst changeFilter = createAction(CHANGE_FILTER);\r\n\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport contactActions from '../../redux/contacts/contacts-actions';\r\n// uuidv4(); // ⇨ '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d'\r\n\r\nclass Phonebook extends Component {\r\n  state = { name: '', number: '' };\r\n\r\n  contactCreateList = () => {\r\n    const nameToCheck = this.state.name.toLowerCase();\r\n    const { name, number } = this.state;\r\n    const { addContact, contactBase } = this.props;\r\n    let isExist = true;\r\n\r\n    contactBase.map(({ name }) => {\r\n      if (name.toLowerCase() === nameToCheck) {\r\n        isExist = false;\r\n        alert(`${name} is already added to your phonebook`);\r\n      }\r\n    });\r\n    if (isExist) {\r\n      addContact(name, number);\r\n    }\r\n  };\r\n\r\n  contactAdd = event => {\r\n    event.preventDefault();\r\n    this.contactCreateList();\r\n    this.resetForm();\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const nameInputId = uuidv4();\r\n    const phoneInputId = uuidv4();\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.contactAdd}>\r\n          <label htmlFor={nameInputId}>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={this.handleInputChange}\r\n              value={this.state.name}\r\n              id={nameInputId}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor=\"phoneInputId\">\r\n            number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n              required\r\n              onChange={this.handleInputChange}\r\n              value={this.state.number}\r\n              id={phoneInputId}\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  contactBase: state.contact.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContact: (name, value) => dispatch(contactActions.addContact(name, value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import React from 'react';\r\n/* import styles from './Contacts.css'; */\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactActions from '../../redux/contacts/contacts-actions';\r\n\r\nconst Contacts = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {contacts.map(({ id, name, number }) => {\r\n          return (\r\n            <li key={id}>\r\n              <p>\r\n                {name}: {number}\r\n              </p>\r\n              <button type=\"button\" onClick={() => deleteContact(id)}>\r\n                delete\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getVisibleContacts = (contacList, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacList.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contact: { contacts, filter } }) => ({\r\n  contacts: getVisibleContacts(contacts, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: id => dispatch(contactActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactActions from '../../redux/contacts/contacts-actions';\r\n/* \r\nimport styles from './Filter.module.css'; */\r\n\r\nconst Filter = ({ filter, changeFilter }) => {\r\n  return (\r\n    <label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={changeFilter}\r\n      ></input>\r\n      <br />\r\n      Find contacts by name\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: state.contact.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeFilter: e =>\r\n    dispatch(contactActions.changeFilter(e.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport Phonebook from './components/Phonebook';\r\nimport Contacts from './components/Contacts';\r\nimport Filter from './components/Filter';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Phonebook</h1>\r\n        <Phonebook />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <Contacts />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport actions from './contacts-actions';\r\n\r\nconst baseContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst contacts = createReducer(baseContacts, {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) => [\r\n    ...state.filter(contact => contact.id !== payload),\r\n  ],\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n\r\n/* const contacts = (state = baseContacts, { type, payload }) => {\r\n  switch (type) {\r\n    case actionType.ADD:\r\n      return [...state, payload];\r\n\r\n    case actionType.DELETE:\r\n      return [...state.filter(contact => contact.id !== payload)];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}; */\r\n\r\n/* const filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case actionType.CHANGE_FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}; */\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  PAUSE,\r\n  PURGE,\r\n  PERSIST,\r\n  REGISTER,\r\n  REHYDRATE,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactReducer from './contacts/contacts-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contactsDb',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contact: persistReducer(contactsPersistConfig, contactReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}